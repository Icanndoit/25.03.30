// https://www.acmicpc.net/problem/1822
#include<iostream>
#include <algorithm>
using namespace std;

int forfunc1(int arr1[], int arr2[], int size1, int size2) {
	int cut = 0;
	for (int i = 0; i < size1; i++)
	{
		bool found = false;
		int low = 0, high = size2 - 1, mid;
		while (low <= high) {  // 4, 7, 9
			mid = (low + high) / 2;
			if (arr2[mid] < arr1[i])
				low = mid + 1;
			else if (arr2[mid] > arr1[i])
				high = mid - 1;
			else
				found = true;
		}
		if (!found)
			cut += 1;
	}
	return cut;
}

void forfunc2(int arr1[], int arr2[], int size1, int size2) {
	int cut = 0;
	for (int i = 0; i < size1; i++)
	{
		bool found = false;
		int low = 0, high = size2 - 1, mid;
		while (low <= high) {  // 4, 7, 9
			mid = (low + high) / 2;
			if (arr2[mid] < arr1[i])
				low = mid + 1;
			else if (arr2[mid] > arr1[i])
				high = mid - 1;
			else
				found = true;
		}
		if (!found)
			cout << arr1[i] << " ";
	}
}

int output(int arr1[], int arr2[], int size1, int size2) {
	int cut = forfunc1(arr1, arr2, size1, size2);
	return cut;
}

int main() {
	int size1, size2;

	cin >> size1 >> size2;
	int* arr1 = new int[size1];
	int* arr2 = new int[size2];

	for (int i = 0; i < size1; i++)
		cin >> arr1[i];
	for (int i = 0; i < size2; i++)
		cin >> arr2[i];

	sort(arr1, arr1 + size1);
	sort(arr2, arr2 + size2);

	int re = output(arr1, arr2, size1, size2);
	cout << re << endl;
	if (re != 0)
		forfunc2(arr1, arr2, size1, size2);

	delete[]arr1;
	delete[]arr2;

	return 0;
}
